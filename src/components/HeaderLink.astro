---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
        color: inherit;
        text-decoration: none;
        padding: 10px 5px;
        display: block;
        position: relative;
        margin-left: 20px;
        min-width: 70px;
        text-align: center;
    }

    a:not(.selected) {
        opacity: 0.7;
    }

    a::before {
        content: "";
        position: absolute;
        transition: transform 0.3s ease;
        left: 0;
        bottom: 0;
        width: 100%;
        height: 2px;
        background: var(--text-secondary);
        transform: scaleX(0);
    }

    a:hover::before,
    .selected::before {
        transform: scaleX(1);
    }
</style>
